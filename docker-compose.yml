version: '3.9'

services:
  # 反向代理/静态资源 - 可选
  nginx:
    image: nginx:1.25
    container_name: collab_nginx
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - web
    networks:
      - collab_net

  # Django Web 服务
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: collab_web
    command: ["/bin/sh", "-c", "python manage.py migrate && gunicorn --workers=3 --timeout 120 --bind 0.0.0.0:8000 config.asgi:application -k uvicorn.workers.UvicornWorker"]
    env_file:
      - .env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - collab_net

  # Celery Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: collab_worker
    command: ["celery", "-A", "config", "worker", "--loglevel=INFO"]
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    networks:
      - collab_net

  # Celery Beat
  beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: collab_beat
    command: ["celery", "-A", "config", "beat", "--loglevel=INFO"]
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    networks:
      - collab_net

  # AI 服务
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: collab_ai
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8002"]
    env_file:
      - .env
    ports:
      - "8002:8002"
    networks:
      - collab_net

  # PostgreSQL 数据库
  db:
    image: postgres:15
    container_name: collab_db
    environment:
      POSTGRES_DB: collab_platform
      POSTGRES_USER: collab_user
      POSTGRES_PASSWORD: collab_password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - collab_net

  # Redis 缓存/队列
  redis:
    image: redis:7-alpine
    container_name: collab_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - collab_net

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: collab_es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - collab_net

  # MinIO 对象存储
  minio:
    image: minio/minio:RELEASE.2023-12-02T10-51-33Z
    container_name: collab_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - collab_net

volumes:
  db_data:
  redis_data:
  es_data:
  minio_data:

networks:
  collab_net:
    driver: bridge